# Locate Luabind library

FIND_PATH(LUABIND_INCLUDE_DIR luabind.hpp
  HINTS $ENV{LUABIND_DIR}
  PATH_SUFFIXES include/luabind include/luabind09 include
)

FIND_LIBRARY(LUABIND_LIBRARY_RELEASE
  NAMES luabind luabind09 luabind-0.9
  HINTS $ENV{LUABIND_DIR}
  PATH_SUFFIXES lib64 lib
)

FIND_LIBRARY(LUABIND_LIBRARY_DEBUG
  NAMES luabind-d luabind09-d luabind-0.9-d
  HINTS $ENV{LUABIND_DIR}
  PATH_SUFFIXES lib64 lib
)

IF(LUABIND_LIBRARY_RELEASE OR LUABIND_LIBRARY_DEBUG)
    IF(LUABIND_LIBRARY_RELEASE AND LUABIND_LIBRARY_DEBUG)
        SET(LUABIND_LIBRARY optimized ${LUABIND_LIBRARY_RELEASE}
                            debug     ${LUABIND_LIBRARY_DEBUG})
    ELSEIF(LUABIND_LIBRARY_RELEASE)
        SET(LUABIND_LIBRARY ${LUABIND_LIBRARY_RELEASE})
    ELSE()
        SET(LUABIND_LIBRARY ${LUABIND_LIBRARY_DEBUG})
    ENDIF()
ENDIF()

IF(LUABIND_LIBRARY)
    SET(LUABIND_LIBRARIES "${LUABIND_LIBRARY}" CACHE STRING "Luabind Libraries")
ENDIF(LUABIND_LIBRARY)

INCLUDE(${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake)
# handle the QUIETLY and REQUIRED arguments and set LUABIND_FOUND to TRUE if
# all listed variables are TRUE
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Luabind
                                  REQUIRED_VARS LUABIND_LIBRARIES LUABIND_INCLUDE_DIR)

MARK_AS_ADVANCED(LUABIND_INCLUDE_DIR LUABIND_LIBRARIES LUABIND_LIBRARY)
